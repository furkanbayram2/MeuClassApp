//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MeuClass.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ClassAppContext : DbContext
    {
        public ClassAppContext()
            : base("name=ClassAppContext")
        {
            Database.SetInitializer(new MyConfig());
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Block> Block { get; set; }
        public virtual DbSet<Department> Department { get; set; }
        public virtual DbSet<Follow> Follow { get; set; }
        public virtual DbSet<Lesson> Lesson { get; set; }
        public virtual DbSet<LessonAccess> LessonAccess { get; set; }
        public virtual DbSet<LessonComment> LessonComment { get; set; }
        public virtual DbSet<LessonCommentLike> LessonCommentLike { get; set; }
        public virtual DbSet<LessonContent> LessonContent { get; set; }
        public virtual DbSet<LessonContentLike> LessonContentLike { get; set; }
        public virtual DbSet<Report> Report { get; set; }
        public virtual DbSet<ReportType> ReportType { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<UserFile> UserFile { get; set; }
        public virtual DbSet<UserType> UserType { get; set; }
    
        
    }

    public class MyConfig : CreateDatabaseIfNotExists<ClassAppContext>
    {
        public override void InitializeDatabase(ClassAppContext context)
        {
            base.InitializeDatabase(context);
        }

        protected override void Seed(ClassAppContext context)
        {
            context.UserType.Add(new UserType() { UserTypeID = 1, UserTypeName = "Admin" });
            context.UserType.Add(new UserType() { UserTypeID = 2, UserTypeName = "Teacher" });
            context.UserType.Add(new UserType() { UserTypeID = 3, UserTypeName = "Student" });
            context.SaveChanges();
            base.Seed(context);
        }
    }
}
